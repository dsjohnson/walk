// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// my_test
arma::mat my_test(const arma::mat v, SEXP Q, double prec, bool renorm, bool t2, bool checks);
RcppExport SEXP _walk_my_test(SEXP vSEXP, SEXP QSEXP, SEXP precSEXP, SEXP renormSEXP, SEXP t2SEXP, SEXP checksSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type v(vSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Q(QSEXP);
    Rcpp::traits::input_parameter< double >::type prec(precSEXP);
    Rcpp::traits::input_parameter< bool >::type renorm(renormSEXP);
    Rcpp::traits::input_parameter< bool >::type t2(t2SEXP);
    Rcpp::traits::input_parameter< bool >::type checks(checksSEXP);
    rcpp_result_gen = Rcpp::wrap(my_test(v, Q, prec, renorm, t2, checks));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_walk_my_test", (DL_FUNC) &_walk_my_test, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_walk(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
